{\rtf1\ansi\deff0\nouicompat{\fonttbl{\f0\fnil\fcharset0 Calibri;}}
{\*\generator Riched20 10.0.19041}\viewkind4\uc1 
\pard\sa200\sl276\slmult1\f0\fs22\lang9 1. Choose the correct answer:\par
\par
\tab A. var is global scoped.\par
\tab B. var is block scoped.\par
Answer: A\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\par
2. Choose the correct answer:\par
A. let is global scoped.\tab\tab\tab\tab\tab\tab\tab\tab\tab\par
B. let is block scoped.\par
Answer: B\par
3. To prevent errors related to var variables. Place the following at the top of your code: Choose the correct answer.\par
\par
\tab A. "use stricly";\par
\tab B. "use strict code";\par
        C. "use strict";\tab\par
Answer: C\tab\tab\tab\tab\tab\tab\tab\tab\par
4. Choose all the correct statement about variables:\par
\tab A. variable names should begin with lower case.\tab\tab\tab\tab\tab\par
\tab B. variable names can contain spaces.\par
\tab C. variable names can contain underscores.\par
Answer: A & C\par
5. Javascript has seven primitive types. They are the following:\par
\tab A.  String, Number, BigInt, Boolean, Symbol,undefined,null.\tab\tab\tab\tab\tab B.  String, Number, BigInt, Boolean, Array,undefined,null.\par
Answer: A\par
6. Which template string is correct to get the output:\par
\tab "Let's learn Python"\par
\tab A. let language = "Python";\tab\tab\tab\tab\tab\tab\tab\tab\par
\tab    let message = `Let's learn $\{language\}`;\par
\tab    console.log(message);\par
\par
\tab B. let language = "Python";\par
           let message = "Let's learn $\{language\}";\par
           console.log(message);\par
Answer: B\par
\par
7. The following is a BigInt number:\par
\tab A. 90071992547409920\par
\tab B. 90071992547409920n\tab\tab\tab\tab\tab\tab\tab\tab\par
Answer: B\par
\par
8. let bigNr = 90071992547409920n;\par
   let intNr = 20; \par
   let result = bigNr + intNr;\par
\par
   Choose the correct statement for the above:\par
\par
\tab A.  You can mix mix BigInt and other types. There will be no error.\tab\tab\tab\par
           B. You can only operate on BigInt with other BigInts.\par
           You will get the following errorUncaught TypeError: \par
         \tab   Cannot mix BigInt and other types, use explicit conversions\par
Answer: B\par
\par
9.let nr1 = 2;\par
  let nr2 = "2";\par
  console.log(nr1 + nr2);\par
\tab A. the output will be "22".\tab\tab\tab\tab\tab\tab\tab\tab\par
\tab B. The output will be 4.\par
Answer: B\par
\par
10. let stringNum = "2".\par
    To cast thisstri ng number to a number, use the following:\par
\par
\tab A. let num = Int(stringNum);\par
\tab B. let num = number(stringNum);\par
\tab C. let num = Number(stringNum);\tab\tab\tab\tab\tab\tab\tab\par
Answer: B\par
\par
11. let x = 2;\par
    let y = 4;\par
    How would you get x to the power of y?\par
\tab A. let result = x * y;\par
\tab    result will be 16.\par
\tab B. let result = x ** y;\par
           result will be 16\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\par
C. B. let result = x ** y;\par
           result will be 8.\par
          Answer:B\par
 \par
12. let nr3 = 8;\par
    let nr4 = 2;\par
    To get the remainder:\par
\tab A. let result = nr3 % nr4;\tab\tab\tab\tab\tab\tab\tab\tab\par
           result will be 0;\par
\tab B let result = nr3 / nr4;\par
           result will be 0;\par
\par
Answer: A\par
\par
13. let nr1 = 4;\par
    console.log(++nr1);\par
\tab A. output will be 4\par
\tab B. output will be 5\tab\tab\tab\tab\tab\tab\tab\tab\tab\par
Answer: B\par
\par
14. let nr1 = 4;\par
    console.log(nr1--)\par
\tab A. output will be 4\tab\tab\tab\tab\tab\tab\tab\tab\tab\par
\tab B. output will be 3\par
Answer: B\par
\par
15. let x = 1;\par
    let y = 2;\par
    let z = 3;\par
    console.log(x < y && y < z);\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab A. output will be false;\par
\tab B. output will be true\par
Answer: B\par
\par
16. let x = 1;\par
    let y = 2;\par
    let z = 3;\par
    console.log(x > y || y > z);\tab\tab\tab\tab\tab\tab\tab\tab\tab\par
\tab A. output will be false;\par
\tab B. output will be true\par
Answer:B\par
\par
17. let x = 7;\par
    let y = 2;\par
    console.log(!(x < y));\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab A. output will be false;\par
\tab B. output will be true\par
Answer: B\par
\par
18. cars = ["Toyota", "Renault", "Volkswagen"];\par
    To get the element at the last index:Choose all that apply\par
\tab A. console.log(cars[2]);\tab\tab\tab\tab\tab\tab\tab\tab\tab\par
\tab B. console.log(cars[]3);\tab\par
\tab C. console.log(cars[cars.length - 1]);\par
\tab D. console.log(cars[cars.length]);\par
Answer: C\par
\par
19. favoriteFruits = ["grapefruit", "orange", "lemon"];\par
    To add an element to the back:\par
\tab A.favoriteFruits.shift("tangerine");\tab\tab\tab\tab\tab\tab\tab\par
\tab B.favoriteFruits.push("tangerine");\par
\tab C.favoriteFruits.pop("tangerine");\par
Answer: B\par
\par
20. favoriteFruits = ["grapefruit", "orange", "lemon"];\par
    To add an element to the front:\par
\par
\tab A.favoriteFruits.shift("tangerine");\tab\tab\tab\tab\tab\tab\tab\par
\tab B.favoriteFruits.unshift("tangerine");\par
\tab C.favoriteFruits.push("tangerine");\par
Answer: B\par
\par
21. favoriteFruits = ["grapefruit", "orange", "lemon"];\tab\tab\tab\tab\tab\tab\par
    To remove an element at the front:\par
A.favoriteFruits.shift("tangerine");\par
\tab B.favoriteFruits.shift();\par
\tab C.favoriteFruits.pop();\par
\par
Answer:B\par
\par
22. favoriteFruits = ["grapefruit", "orange", "lemon"];\par
    To remove an element at the back:\par
\tab A.favoriteFruits.shift("tangerine");\tab\tab\tab\tab\tab\tab\tab\par
\tab B.favoriteFruits.shift();\par
\tab C.favoriteFruits.pop();\par
Answer: B\par
\par
23. let arrOfShapes = ["circle", "triangle", "rectangle", "pentagon"];\par
    arrOfShapes.splice(1, 0, "square", "trapezoid");\par
    console.log(arrOfShapes);\par
\par
\tab A. output will be ["square","trapezoid,"circle", "triangle", "rectangle", "pentagon"];\tab\tab B. output will be ["circle","square","trapezoid, "triangle", "rectangle", "pentagon"];\par
Answer: B\par
\par
24. let arrOfShapes = ["circle", "triangle", "rectangle", "pentagon"];\par
    arrOfShapes.splice(1, 1, "square", "trapezoid");\par
    console.log(arrOfShapes);\par
\tab A. output will be ["square","trapezoid,"circle", "triangle", "rectangle", "pentagon"];\tab\tab B. output will be ["circle","square","trapezoid, "rectangle", "pentagon"];\par
C. output will be ["circle","square","trapezoid, "rectangle"];\par
Answer: B\par
\par
25. let someValues1 = [1, 2, 3];\par
    let someValues2 = [4, 5, 6];\par
    let someValues3 = [7, 8, 9];\par
    let arrOfArrays2 = [[1, 2, 3], [4, 5, 6], [7, 8, 9]];\par
\tab Find the number 8:\par
A. let value1 = arrOfArrays[0][1];\tab\tab\tab\tab\tab\tab\tab\tab B. let value1 = arrOfArrays[2][1];\par
\tab C. let value1 = arrOfArrays[3][2];\par
Answer: C\par
\par
26. let addresses = [\{\par
                      street: "2nd street",\par
 \tab\tab       number: "123",\par
                      zipcode: "33116",\par
                      city: "Miami",\par
                      state: "Florida"\par
                     \},\par
                     \{\par
                      street: "1st West avenue",\tab\tab\tab\tab\tab\tab\tab\tab addresses[1].city OR addresses[1]["city"]\par
                      number: "5",\tab\tab\tab\tab\tab\tab\tab\tab\par
                      zipcode: "75001",\par
                      city: "Addison",\par
                      state: "Texas"\par
                     \}];\par
\par
\tab Find "Addison"\par
Answer:\par
\par
27.  What will be outputted to the console in this instance?\par
     const q = ' 2';\par
     switch (q) \{\par
       case '1':\par
        answer = "one";\par
        break;\par
       case 1:\par
        answer = 1;\par
        break;\par
       case 2:\par
        answer = "this is the one";\par
        break;\par
      default:\par
       answer = "not working";\par
      \}\par
      console.log(answer);\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab not working\par
Answer: "Thia is the one"\par
\par
28.  What will be outputted to the console in this instance?\par
     const q = 2;\par
     switch (q) \{\par
       case '1':\par
        answer = "one";\par
        break;\par
       case 1:\par
        answer = 1;\par
        break;\par
       case '2':\par
        answer = "this is the one";\par
        break;\par
      default:\par
       answer = "not working";\par
      \}\par
      console.log(answer);\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab not working\par
\par
29. What is the expected output for the following code?\par
    let step = 2;\par
    for (let i = 0; i < 1000; i += step) \{\par
       if (i > 10) \{\par
          break;\par
          \}\par
      console.log(i);\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab      \}\par
Answer: 0,2,4,6,8,10\par
\par
30. What is the final value for myArray, and what is expected in the console?\par
    const myArray = [1,5,7];\par
    for(el of myArray)\{\par
      console.log(Number(el));\par
      el = Number(el) + 2;\par
      console.log(el);\par
     \}\par
    console.log(myArray);\par
Answer:1,5,7\tab\tab\tab\tab\tab\tab\tab\tab\par
\par
31.  What value is output into the console?\par
    (function () \{\par
     console.log("Let's play ");\par
     \})();\par
     (function () \{\par
      return "Chess and"\par
     \})();\par
     let result = (function () \{\par
     let game2 = "Dominoes";\par
     return game2;\par
     \})();\par
     console.log(result);\par
     (function (score) \{\par
      console.log("My score was " + score);\tab\tab\tab\tab\tab Lets play Dominoes. My score was 100\par
     \})(100);\par
\par
32. What will be output to the console?\par
\tab let test = (num) => \{return num * 2\};\par
\tab console.log(test(14));\tab\tab\tab\tab\tab\tab\tab\par
Answer: undefined\par
\par
33. What will be output to the console? \par
    let addFive = (num) => num + 2;\par
    console.log(addFive(14));\par
Answer: 16\tab\tab\tab\tab\tab\tab\tab\par
\par
34. Change the follwing to a ternary operator:\par
let allowed;\par
let age = Number(prompt("What is your age?"));\par
   if (age > 12) \{\par
     allowed = true;\par
     \}else \{\par
        allowed = false;\par
     \}\par
alert(`Are you allowed in? $\{allowed\}`);      \tab\tab\tab\tab\par
\tab\tab\tab\tab\tab\tab\tab\tab\par
let allowed;\par
let age = Number(prompt("What is your age?"));\par
let allowed = (age> 12) ? true : false;\par
alert(`Are you allowed in? $\{allowed\}`); \par
Answer;let age = age = > 12? true : false\par
\par
35. class Person \{\par
 constructor(firstname, lastname) \{\par
 this.firstname = firstname;\par
 this.lastname = lastname;\par
 \}\par
\}\par
\par
Create three people objects from the person class and print their names to the console.\par
\par
class Person \{\par
 constructor(firstname, lastname) \{\par
 this.firstname = firstname;\par
 this.lastname = lastname;\par
 \}\par
\}\par
\par
Let person1 = new person (\ldblquote thandi\rdblquote , \ldblquote sibeko\rdblquote )\par
Let person2 = new person (\ldblquote sne\rdblquote , \ldblquote bhembe\rdblquote )\par
Let person3 = new person (\ldblquote amani\rdblquote , \ldblquote dlamini\rdblquote )\par
\tab\tab\tab\tab\par
\par
37. Create a Car class with a contructor for properties make.model,year. Create two cars from this class and print their information.\par
class Car \{\par
  constructor(make, model, year) \{\par
    this.make = make;\par
    this.model = model;\par
    this.year = year;\par
  \}\par
\}\par
\par
\par
let car1 = new Car("Toyota", "Camry", 2020);\par
let car2 = new Car("Honda", "", 2018);\par
\par
\par
console.log("Car 1:");\par
console.log("Make: " + car1.make);\par
console.log("Model: " + car1.model);\par
console.log("Year: " + car1.year);\par
\par
console.log("\\nCar 2:");\par
console.log("Make: " + car2.make);\par
console.log("Model: " + car2.model);\par
console.log("Year:\~"\~+\~car2.year);\par
\tab\tab\tab\tab\tab\tab\tab\par
\par
38. Try giving it a drive() method that prints "Driving my " + this.make + " car"; \par
\par
\par
\par
39. Create an array of 10 guestnames.\par
    create a prompt that ask for a person's name.\par
    call a function that you must create that accepts a name and loops through your guests array list using a for of loop to return  if the person is allowed in.\par
    use an alert to give the result.\par
et guestNames = ["Alice", "Aphiwe", "Alice", "Precious", "Eve", "Frank", "Grace", "Prewsh", "Ivy", "Jack"];\par
\par
let personName = prompt("Please enter your name:");\par
function checkGuestList(name) \{\par
  for (let guest of guestNames) \{\par
    if (guest.toLowerCase() === name.toLowerCase()) \{\par
      return true; // Person is allowed in\par
    \}\par
  \}\par
  return false; // Person is not allowed in\par
\}\par
\par
// Call the function and display the result with an alert\par
if (checkGuestList(personName)) \{\par
  alert("Welcome! You are allowed in.");\par
\} else \{\par
  alert("Sorry, you are not on the guest\~list.");\par
\}\par
\par
40. try using the above with a forEach loop.\par
let guestArray = ["ben", "sue", "gugu", "peter", "sizwe", "may", "henry", "sheryl", "taylor"];\par
let guest;\par
do \{\par
   guest =  prompt("Please enter your name?");\par
\}while(guest === null);\par
\par
lookUp()\par
function lookUp() \{\par
    guest = guest.toLowerCase();\par
    let found =  guestArray.find(g => g === guest );\par
    if (found === guest) \{\par
        alert("you are allowed in " + guest);\par
    \} else \{\par
        alert("You  are not allowed in " + guest);\par
    \}\par
\par
\}\par
\par
\tab\tab\tab\tab\tab\tab\tab\tab\par
\par
\par
  \par
\par
 \par
\par
\tab\tab\tab\tab\tab\tab\tab\tab\tab\par
\par
\par
\par
\par
\par
\par
\par
\par
\tab\par
\par
\par
\par
\par
\par
\par
\tab\par
}
 